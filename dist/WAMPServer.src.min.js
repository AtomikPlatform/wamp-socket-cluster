!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("jsonschema")):"function"==typeof define&&define.amd?define("wampSocketCluster",["jsonschema"],t):"object"==typeof exports?exports.wampSocketCluster=t(require("jsonschema")):e.wampSocketCluster=t(e.jsonschema)}(this,function(e){return function(e){function t(s){if(r[s])return r[s].exports;var n=r[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,t),n.l=!0,n.exports}var r={};return t.m=e,t.c=r,t.i=function(e){return e},t.d=function(e,r,s){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:s})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=3)}([function(e,t,r){"use strict";function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var n,o,i={id:"/WAMPResponse",type:"object",properties:{data:{},error:{},procedure:{type:"string"},signature:{type:"number"},success:{type:"boolean"},type:{type:"string"}},required:["type","procedure","signature","success","error"]},p={id:"/WAMPRequest",type:"object",properties:{data:{},signature:{type:"number"},procedure:{type:"string"},type:{type:"string"}},required:["type","procedure"]},c={id:"/MasterWAMPResponse",type:"object",properties:{data:{},error:{},procedure:{type:"string"},signature:{type:"number"},socketId:{type:"string"},success:{type:"boolean"},type:{type:"string"},workerId:{type:"number"}},required:["workerId","socketId","signature","type","procedure","success"]},u={id:"/MasterWAMPRequest",type:"object",properties:{data:{},procedure:{type:"string"},signature:{type:"number"},socketId:{type:"string"},type:{type:"string"},workerId:{type:"number"}},required:["workerId","socketId","type","procedure"]},d={id:"/InterProcessRPCResponseSchema",type:"object",properties:{data:{},error:{},procedure:{type:"string"},signature:{type:"number"},socketId:{type:"string"},success:{type:"boolean"},type:{type:"string"},workerId:{type:"number"}},required:["workerId","socketId","signature","type","procedure","success"]},a={id:"/InterProcessRPCRequestSchemaSchema",type:"object",properties:{data:{},procedure:{type:"string"},signature:{type:"number"},socketId:{type:"string"},type:{type:"string"},workerId:{type:"number"}},required:["workerId","socketId","signature","type","procedure"]},y={id:"/MasterConfigResponseSchema",type:"object",properties:{registeredEvents:{type:"array"},type:{type:"string"}},required:["registeredEvents","type"]},l={id:"/MasterConfigRequestSchema",type:"object",properties:{type:{type:"string"}},required:["type"]},m=(n={},s(n,i.id,p.id),s(n,c.id,p.id),s(n,d.id,a.id),s(n,y.id,l.id),n),g=(o={},s(o,p.id,i.id),s(o,u.id,i.id),s(o,a.id,d.id),s(o,l.id,y.id),o);e.exports={WAMPRequestSchema:p,WAMPResponseSchema:i,InterProcessRPCRequestSchema:a,InterProcessRPCResponseSchema:d,MasterWAMPResponseSchema:c,MasterWAMPRequestSchema:u,MasterConfigRequestSchema:l,MasterConfigResponseSchema:y,responsesIdsMap:m,requestsIdsMap:g}},function(e,t){e.exports=require("jsonschema")},,function(e,t,r){"use strict";function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var s=t[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,r,s){return r&&e(t.prototype,r),s&&e(t,s),t}}(),o=r(1).Validator,i=r(0),p=new o,c=function(){function e(){s(this,e),this.endpoints={rpc:{},event:{}}}return n(e,[{key:"upgradeToWAMP",value:function(e){var t=this;return console.log("[36m%s[0m","WAMPServer ----- upgradeToWAMP",this.endpoints),e.on("raw",function(r){console.log("[36m%s[0m","WAMPServer ----- RECEIVED RPC CALL",r.procedure);try{r=JSON.parse(r)}catch(e){return}p.validate(r,i.WAMPRequestSchema).valid&&r.type===i.WAMPRequestSchema.id?t.processWAMPRequest(r,e):console.log("[36m%s[0m","WAMPServer processWAMPRequest WAMPRequestSchema.errors",p.validate(r,i.WAMPRequestSchema).errors)}),Object.keys(this.endpoints.event).forEach(function(r){e.on(r,function(s){console.log("[36m%s[0m","WAMPServer ----- RECEIVED EVENT CALL",r,s),t.processWAMPRequest({type:i.WAMPRequestSchema.id,procedure:r,data:s},e)})}),e}},{key:"processWAMPRequest",value:function(e,t){return console.log("[36m%s[0m","WampServer ----- processWAMPRequest received call procedure",e.procedure),this.endpoints.rpc[e.procedure]&&"function"==typeof this.endpoints.rpc[e.procedure]?(console.log("[36m%s[0m","WampServer ----- processWAMPRequest RPC"),this.endpoints.rpc[e.procedure](e.data,this.reply.bind(this,t,e))):this.endpoints.event[e.procedure]&&"function"==typeof this.endpoints.event[e.procedure]?(console.log("[36m%s[0m","WampServer ----- processWAMPRequest Event"),this.endpoints.event[e.procedure](e.data)):(console.log("[36m%s[0m","WampServer ----- processWAMPRequest not registered. reply now"),this.reply(t,e,"procedure "+e.procedure+" not registered on WAMPServer",null))}},{key:"reply",value:function(e,t,r,s){e.send(JSON.stringify({success:!r,data:s,error:r,type:i.WAMPResponseSchema.id,procedure:t.procedure,signature:t.signature}))}},{key:"registerRPCEndpoints",value:function(e){console.log("[36m%s[0m","ENDPOINTS: registerRPCEndpoints",e),this.endpoints.rpc=Object.assign(this.endpoints.rpc,e)}},{key:"registerEventEndpoints",value:function(e){console.log("[36m%s[0m","ENDPOINTS: registerEVENTEndpoints",e),this.endpoints.event=Object.assign(this.endpoints.event,e)}},{key:"reassignRPCEndpoints",value:function(e){console.log("[36m%s[0m","ENDPOINTS: reassignPCEndpoints",e),this.endpoints.rpc=e}},{key:"reassignEventEndpoints",value:function(e){console.log("[36m%s[0m","ENDPOINTS: reassignEventEndpoints",e),this.endpoints.event=e}}]),e}();e.exports=c}])});