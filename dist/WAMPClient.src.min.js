!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("jsonschema"),require("lodash.get")):"function"==typeof define&&define.amd?define("wampSocketCluster",["jsonschema","lodash.get"],t):"object"==typeof exports?exports.wampSocketCluster=t(require("jsonschema"),require("lodash.get")):e.wampSocketCluster=t(e.jsonschema,e["lodash.get"])}(this,function(e,t){return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var r={};return t.m=e,t.c=r,t.i=function(e){return e},t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=6)}([function(e,t,r){"use strict";e.exports.WAMPResultSchema={id:"/WAMPResult",type:"object",properties:{type:{type:"string"},procedure:{type:"string"},data:{},success:{type:"boolean"}},required:["type","procedure","success"]},e.exports.WAMPCallSchema={id:"/WAMPCall",type:"object",properties:{type:{type:"string"},procedure:{type:"string"},data:{}},required:["type","procedure"]},e.exports.MasterWAMPResultSchema={id:"/ConcurrentWAMPRequest",type:"object",properties:{workerId:{type:"number"},socketId:{type:"string"},type:{type:"string"},procedure:{type:"string"},data:{},success:{type:"boolean"}},required:["workerId","socketId","type","procedure","success"]}},function(e, t){e.exports=require("jsonschema")},function(e, t){e.exports=require("lodash.get")},,,,function(e, t, r){"use strict";function n(e, t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=function(){function e(e, t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),s=r(2),u=r(1).Validator,c=r(0).WAMPResultSchema,a=r(0).WAMPCallSchema,i=new u,l=function(){function e(){n(this,e),this.callsResolvers={}}return o(e,null,[{key:"MAX_CALLS_ALLOWED",get:function(){return 1e3}}]),o(e,[{key:"upgradeToWAMP",value:function(t){var r=this;return t.on("raw",function(e){if(i.validate(e,c).valid&&e.type===c.id){var t=s(r.callsResolvers,e.procedure+"."+e.signature);if(!t)throw new Error("Unable to find resolving function for procedure "+e.procedure+" with signature "+e.signature);e.success?t.success(e.data):t.fail(e.data),delete r.callsResolvers[e.procedure][e.signature]}}),t.wampSend=function(n,o){return new Promise(function(s,u){if(r.callsResolvers[n]||(r.callsResolvers[n]={}),Object.keys(r.callsResolvers[n]).length>=e.MAX_CALLS_ALLOWED)return u("No more than "+e.MAX_CALLS_ALLOWED+" calls allowed");var c=Object.keys(r.callsResolvers[n]).length-1+1;r.callsResolvers[n][c]={success:s,fail:u},t.send(JSON.stringify({signature:c,procedure:n,type:a.id,data:o}))})},t}}]),e}();e.exports=l}])});